#!/bin/bash
# yadm bootstrap script for a new machine

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Function to install a font (for ubuntu)
install_font() {
    FONT_DIR="/usr/local/share/fonts"
    echo "[BOOTSTRAP] Installing font: $1"
    mkdir -p "$HOME/tmp"
    curl -L -o "$HOME/tmp/$1.zip" "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/$1.zip"
    sudo unzip "$HOME/tmp/$1.zip" -d "$FONT_DIR"
    rm "$HOME/tmp/$1.zip"
}

# Check for the operating system
if [[ "$(uname)" == "Darwin" ]]; then
    echo "[BOOTSTRAP] macOS detected."

    # Check for Xcode CLI tools and install if not present
    if ! xcode-select -p &> /dev/null; then
        echo "[BOOTSTRAP] Installing Xcode Command Line Tools"
        xcode-select --install
        # Wait for the installation to complete
        until xcode-select -p &> /dev/null; do
            sleep 5
        done
    fi

    # Install Homebrew if needed
    if ! command_exists brew; then
        echo "[BOOTSTRAP] Installing Homebrew"
        bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
    
    # Install brew packages
    if command_exists brew; then
        echo "[BOOTSTRAP] Installing/Updating packages"
        brew update
        brew install \
            bat \
            btop \
            eza \
            fd \
            fzf \
            gdu \
            git \
            htop \
            jless \
            jq \
            libb2 \
            luarocks \
            neovim \
            node \
            pyenv \
            ripgrep \
            starship \
            tldr \
            tmux \
            visidata

        # Install fonts
        echo "[BOOTSTRAP] Installing fonts"
        brew tap homebrew/cask-fonts
        brew install --cask \
            font-fira-code-nerd-font \
            font-jetbrains-mono-nerd-font

        echo "[BOOTSTRAP] Installing casks"
        brew install --cask \
            tailscale \
            wezterm

    else
        echo "[BOOTSTRAP] Homebrew installation failed."
        exit 1
    fi

elif command_exists apt; then
    echo "[BOOTSTRAP] Apt-based system detected (Ubuntu optimized). Using apt."

    # Install apt packages
    sudo apt update
    sudo apt install -y \
        bat \
        btop \
        curl \
        eza \
        fd-find \
        gcc \
        gdu \
        git \
        gpg \
        htop \
        jq \
        luarocks \
        neovim \
        ripgrep \
        tailscale \
        visidata

    # Install pyenv
    if ! command_exists pyenv; then
        echo "[BOOTSTRAP] Installing pyenv"
        sudo apt install -y \
            build-essential \
            libssl-dev \
            zlib1g-dev \
            libbz2-dev \
            libreadline-dev \
            libsqlite3-dev \
            libncursesw5-dev \
            xz-utils \
            tk-dev \
            libxml2-dev \
            libxmlsec1-dev \
            libffi-dev \
            liblzma-dev
        curl https://pyenv.run | bash
    fi

    # Install tldr
    pip install tldr
    tldr -u

    # Install node
    if ! command_exists node; then
        echo "[BOOTSTRAP] Installing node"
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        nvm install 20
    fi

    # Install jless
    if ! command_exists jless; then
        echo "[BOOTSTRAP] Installing jless"
        mkdir -p $HOME/tmp $HOME/bin
        curl -L -o $HOME/tmp/jless.zip https://github.com/PaulJuliusMartinez/jless/releases/download/v0.9.0/jless-v0.9.0-x86_64-unknown-linux-gnu.zip
        unzip $HOME/tmp/jless.zip -d $HOME/bin
        rm $HOME/tmp/jless.zip
    fi

    # Install fzf
    if ! command_exists fzf; then
        echo "[BOOTSTRAP] Installing fzf"
        git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
        ~/.fzf/install
    fi

    # Install Starship
    if ! command_exists starship; then
        echo "[BOOTSTRAP] Installing Starship"
        curl -sS https://starship.rs/install.sh | sh
    fi

    # Check for GUI
    if xset q &>/dev/null; then
        echo "[BOOTSTRAP] GUI detected. Installing gui apps."

        # Install fonts
        echo "[BOOTSTRAP] Installing fonts"
        install_font "FiraCode"
        install_font "JetBrainsMono"

        # Install WezTerm
        if ! command_exists wezterm; then
            echo "[BOOTSTRAP] Installing WezTerm"
            curl -fsSL https://apt.fury.io/wez/gpg.key | sudo gpg --yes --dearmor -o /usr/share/keyrings/wezterm-fury.gpg
            echo 'deb [signed-by=/usr/share/keyrings/wezterm-fury.gpg] https://apt.fury.io/wez/ * *' | sudo tee /etc/apt/sources.list.d/wezterm.list
            sudo apt update
            sudo apt install -y wezterm
        fi

        echo "[BOOTSTRAP] Manually install:"
        echo "  - brave browser"
        echo "  - 1password extension"
        echo "  - raindrop extension"
    fi
else
    echo "[BOOTSTRAP] Neither Homebrew nor APT detected. Please install one of them first."
    exit 1
fi

# Common Setup

# Set up pyenv and install Python 3.11.9
echo "[BOOTSTRAP] Setting up pyenv and installing Python 3.11.9"
export PATH="$HOME/.pyenv/bin:$PATH"
eval "$(pyenv init -)"
pyenv install 3.11.9
pyenv global 3.11.9

# Clone tpm if not already present
if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
    echo "[BOOTSTRAP] Cloning tpm"
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi

echo "[BOOTSTRAP] Setup is complete."
echo "[BOOTSTRAP] You may need to run 'chsh' to change your shell to /usr/bin/zsh."
echo "[BOOTSTRAP] Remember to install tpm plugins in tmux <leader>I"
echo "[BOOTSTRAP] Please log out and log back in using zsh."
